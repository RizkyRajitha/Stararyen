{"version":3,"sources":["pages/login/login.js","pages/register/register.js","components/CandidateCard.js","components/usercard.js","components/navbar_metcss.js","pages/dashboard/dashboard.js","pages/fogotpassword/fogotpassword.js","pages/resetpassword/resetpassword.js","pages/emailverify/emailverify.js","pages/modal.js","App.js","pages/userprofile/user.js","serviceWorker.js","index.js"],"names":["jsonwebtoken","require","axios","login","state","token","loggedIn","showError","showNullError","creaderror","changehandleremail","event","_this","setState","email","target","value","changehandlerpass","password","btn1handler","e","preventDefault","console","log","post","then","data","body","localStorage","setItem","jwt","catch","err","M","toast","html","getItem","tk","verify","this","error","_this$state","react_default","a","createElement","react_router","to","className","onSubmit","id","required","type","name","onChange","for","react_router_dom","Component","Register","registered","password1","password2","firstname","lastname","errorpassmatch","duplicateemalifound","changeHandler","Object","defineProperty","submitHandler","config","headers","authorization","passmatch","response","chngehandlsel","usertype","pay","props","history","push","class","role","moment","CandidateCard","thumbsicon","fromNow","upvote","time","s","slice","timeAgo","content","upvotescount","hidden","thisUserUpVoted","onClick","withRouter","href","removeItem","customStyles","width","height","top","left","right","bottom","marginRight","transform","socket","io","transports","upgrade","Modal","setAppElement","dashboard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","logedin","firstName","lastName","emailverified","modalIsOpen","posts","upvoted","downvoted","openModal","changeHandlercontent","afterOpenModal","subtitle","style","color","textAlign","closeModal","verifyemail","res","greet","hour","Date","getHours","upvoteprop","postid","upvotedta","postarr","i","length","_id","up","emit","addpost","senddata","on","fetchPosts","get","_this2","newpost","preposts","JSON","stringify","unshift","upvotedata","userId","updatepost","setTimeout","result","_this3","navbar_metcss","lib_default","isOpen","onAfterOpen","onRequestClose","contentLabel","ref","map","ele","components_CandidateCard","key","date","bind","fogotpassword","errnotfound","succsee","resetpassword","pass1","pass2","passchangeok","massmissmatch","exp","redirectlogin","submithandler","concat","Response","iid","match","params","emailverify","sucsess","Mod","assertThisInitialized","React","App","exact","path","component","Login","Dashboard","emailconfirm","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"miBAQMA,EAAeC,EAAQ,IAEvBC,EAAQD,EAAQ,IAoLPE,6MAjLbC,MAAQ,CACNC,MAAO,GAGPC,UAAU,EACVC,WAAW,EACXC,eAAe,EACfC,YAAY,KAGdC,mBAAqB,SAAAC,GACnBC,EAAKC,SAAS,CACZC,MAAOH,EAAMI,OAAOC,WAIxBC,kBAAoB,SAAAN,GAClBC,EAAKC,SAAS,CACZK,SAAUP,EAAMI,OAAOC,WA2B3BG,YAAc,SAAAC,GACZA,EAAEC,iBAGFC,QAAQC,IAAI,WAEa,KAArBX,EAAKR,MAAMU,OAAwC,KAAxBF,EAAKR,MAAMc,UACxCI,QAAQC,IAAIX,EAAKR,MAAMU,MAAQ,MAAQF,EAAKR,MAAMc,UAClDI,QAAQC,IAAI,OACZX,EAAKC,SAAS,CACZP,UAAU,EACVC,WAAW,EACXC,eAAe,MAGjBc,QAAQC,IAAI,yBACZD,QAAQC,IAAIX,EAAKR,MAAMU,MAAQF,EAAKR,MAAMc,UAE1ChB,EACGsB,KAAK,aAAc,CAClBV,MAAOF,EAAKR,MAAMU,MAClBI,SAAUN,EAAKR,MAAMc,WAEtBO,KAAK,SAAAC,GACJJ,QAAQC,IAAI,6BACZD,QAAQC,IAAIG,GACZ,IAAIC,EAAOD,EAAKA,KAEZC,GACFL,QAAQC,IAAI,UAAYI,GACxBC,aAAaC,QAAQ,MAAOF,EAAKG,KAEjClB,EAAKC,SAAS,CACZP,UAAU,EACVC,WAAW,EACXC,eAAe,KAGjBI,EAAKC,SAAS,CAAEJ,YAAY,MAG/BsB,MAAM,SAAAC,GACLC,IAAEC,MAAM,CAAEC,KAAM,wBAChBb,QAAQC,IAAI,UAAYS,GACxBpB,EAAKC,SAAS,CACZP,UAAU,EACVC,WAAW,EACXC,eAAe,EACfC,YAAY,2FArEpB,IAAIqB,EAAMF,aAAaQ,QAAQ,OAC/Bd,QAAQC,IAAI,cACZD,QAAQC,IAAIO,GACZ,IACE,IAAIO,EAAKrC,EAAasC,OAAOR,EAAK,YAC9BO,IACFf,QAAQC,IAAI,YACZgB,KAAK1B,SAAS,CACZP,UAAU,EACVQ,MAAOuB,EAAGvB,SAGd,MAAO0B,GACPlB,QAAQC,IAAI,gBAAkBiB,GAE9BD,KAAK1B,SAAS,CACZP,UAAU,sCA2DP,IAAAmC,EACyDF,KAAKnC,MAAjCE,GAD7BmC,EACC3B,MADD2B,EACQvB,SADRuB,EACkBlC,UADlBkC,EAC6BnC,UAD7BmC,EACuCjC,cAE9C,OAAKF,EAsEIoC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAE,eApEjBJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,kBAEAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,QAAMI,SAAUT,KAAKpB,aACnBuB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,SACEK,GAAG,QACHC,UAAQ,EACRC,KAAK,QACLC,KAAK,QACLC,SAAUd,KAAK7B,qBAEjBgC,EAAAC,EAAAC,cAAA,SAAOU,IAAI,SAAX,UAEFZ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,SACEM,UAAQ,EACRD,GAAG,OACHE,KAAK,WACLC,KAAK,OACLC,SAAUd,KAAKtB,oBAEjByB,EAAAC,EAAAC,cAAA,SAAOU,IAAI,QAAX,aAEFZ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,SACEO,KAAK,SACLJ,UAAU,uCACV/B,MAAM,UACNiC,GAAG,aAIRV,KAAKnC,MAAMK,YACViC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WAAf,yBAGJL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMT,GAAG,kBACPJ,EAAAC,EAAAC,cAAA,gCAEFF,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAAf,4BAEEL,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMT,GAAG,WACPJ,EAAAC,EAAAC,cAAA,iBADF,IACiBF,EAAAC,EAAAC,cAAA,gCApKfY,uDC0MLC,qNA7MbrD,MAAQ,CACNU,MAAO,GACP4C,YAAY,EACZC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,SAAU,GACVC,gBAAgB,EAChBC,qBAAqB,KAGvBC,cAAgB,SAAA7C,GACdR,EAAKC,SAALqD,OAAAC,EAAA,EAAAD,CAAA,GACG9C,EAAEL,OAAOkC,GAAK7B,EAAEL,OAAOC,QAG1BM,QAAQC,IAAIX,EAAKR,UAoBnBgE,cAAgB,SAAAhD,GACdA,EAAEC,iBACFC,QAAQC,IAAIX,EAAKR,OAEjB,IAEIiE,EAAS,CACXC,QAAS,CAAEC,cAHH3C,aAAaQ,QAAQ,SAMzBoC,EAAY5D,EAAKR,MAAMuD,YAAc/C,EAAKR,MAAMwD,UAEtDtC,QAAQC,IAAIiD,GAERA,GACF5D,EAAKC,SAAS,CACZkD,gBAAgB,IAElB7D,IACGsB,KACC,cACA,CACEV,MAAOF,EAAKR,MAAMU,MAClBI,SAAUN,EAAKR,MAAMuD,UACrBE,UAAWjD,EAAKR,MAAMyD,UACtBC,SAAUlD,EAAKR,MAAM0D,UAEvBO,GAED5C,KAAK,SAAAgD,GACJnD,QAAQC,IAAI,oBACZD,QAAQC,IAAIkD,EAAS/C,MACrBd,EAAKC,SAAS,CAAE6C,YAAY,IAC5B9B,aAAaC,QAAQ,MAAO4C,EAAS/C,KAAKI,OAE3CC,MAAM,SAAAC,GACLV,QAAQC,IAAIS,GACZV,QAAQC,IAAyB,MAArBS,EAAIyC,SAAS/C,MAEA,MAArBM,EAAIyC,SAAS/C,MAIfd,EAAKC,SAAS,CAAEmD,qBAAqB,OAM3CpD,EAAKC,SAAS,CAAEkD,gBAAgB,OAIpCW,cAAgB,SAAAtD,GACdR,EAAKC,SAAS,CAAE8D,SAAUvD,EAAEL,OAAOC,4FAtEnC,IAAMc,EAAMF,aAAaQ,QAAQ,OACjCd,QAAQC,IAAI,wBAA0BO,GAEtC,IACER,QAAQC,IAAI,eACZ,IAAIqD,EAAM5E,IAAasC,OAAOR,EAAK,YACnCR,QAAQC,IAAI,aAAeqD,GAC3BtD,QAAQC,IAAI,wCACZgB,KAAKsC,MAAMC,QAAQC,KAAK,cACxB,MAAOvC,GACPlB,QAAQC,IAAI,8EAgEd,OAA8B,IAA1BgB,KAAKnC,MAAMsD,WAEXhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,kBAEAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAAA,QAAMI,SAAUT,KAAK6B,eAClB7B,KAAKnC,MAAM2D,gBACVrB,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,sBAAsBC,KAAK,SAAtC,2BAID1C,KAAKnC,MAAM4D,qBACVtB,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,sBAAsBC,KAAK,SAAtC,yBAOJvC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAAA,SACEM,UAAQ,EACRC,KAAK,QAELF,GAAG,QACHI,SAAUd,KAAK0B,gBAGhBvB,EAAAC,EAAAC,cAAA,SAAOU,IAAI,SAAX,UAGHZ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,SACEM,UAAQ,EACRC,KAAK,OAELF,GAAG,YACHI,SAAUd,KAAK0B,gBANnB,KAQMvB,EAAAC,EAAAC,cAAA,SAAOU,IAAI,aAAX,cAGNZ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,SACEM,UAAQ,EACRC,KAAK,OAELF,GAAG,WACHI,SAAUd,KAAK0B,gBAEfvB,EAAAC,EAAAC,cAAA,SAAOU,IAAI,YAAX,aAGJZ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,SACEM,UAAQ,EACRC,KAAK,WACLF,GAAG,YAEHI,SAAUd,KAAK0B,gBACfvB,EAAAC,EAAAC,cAAA,SAAOU,IAAI,aAAX,aAGJZ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,SACEM,UAAQ,EACRC,KAAK,WAELF,GAAG,YAEHI,SAAUd,KAAK0B,gBACfvB,EAAAC,EAAAC,cAAA,SAAOU,IAAI,aAAX,qBAGJZ,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,eAEXtC,EAAAC,EAAAC,cAAA,SACEO,KAAK,SACL6B,MAAM,kBACNhE,MAAM,UACNiC,GAAG,eAGPP,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WAAf,mBAEEL,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMT,GAAG,UACPJ,EAAAC,EAAAC,cAAA,iBADF,IACiBF,EAAAC,EAAAC,cAAA,yBAgBxBF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI,sBAzMJU,cCFjB0B,UAASjF,EAAQ,MAEjBkF,6MACJ/E,MAAQ,CACN6C,GAAI,KACJmC,YAAY,EACZC,QAAS,QAGXC,OAAS,WACPhE,QAAQC,IAAI,MACZD,QAAQC,IAAI,QAAUX,EAAKiE,MAAM5B,IACjC3B,QAAQC,IAAIX,EAAKR,QAEa,IAA1BQ,EAAKR,MAAMgF,aACbxE,EAAKC,SAAS,CACZuE,YAAY,IAGdxE,EAAKiE,MAAMS,OAAO1E,EAAKiE,MAAM5B,8EA4D/B,GAAIV,KAAKsC,MAAMU,KACb,IAAIC,EAAIjD,KAAKsC,MAAMU,KAAKE,MAAM,EAAG,IAI7BC,EADaR,EAAOM,EAAG,yBACFH,UAG3B,OACE3C,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,cACXR,KAAKsC,MAAMzB,KADd,IACoBV,EAAAC,EAAAC,cAAA,QAAMG,UAAU,WAAW2C,GAAgB,KAE/DhD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAeR,KAAKsC,MAAMc,UAGzCjD,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAeR,KAAKsC,MAAMe,cAE1ClD,EAAAC,EAAAC,cAAA,KAAGiD,OAAQtD,KAAKsC,MAAMiB,iBACpBpD,EAAAC,EAAAC,cAAA,KACEmD,QAASxD,KAAK+C,OACdrC,GAAG,KACHF,UAAU,4BAGdL,EAAAC,EAAAC,cAAA,KAAGiD,QAAStD,KAAKsC,MAAMiB,iBACrBpD,EAAAC,EAAAC,cAAA,KACEoC,MAAM,yBACNe,QAASxD,KAAK+C,OACdrC,GAAG,qBAjHGO,aA8HbwC,cAAWb,GCnIH3B,mBCDvBvD,EAAQ,KAER,IAoCe+F,cApCA,SAAAnB,GAOb,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,GAAG,MAAMF,UAAU,6BACtBL,EAAAC,EAAAC,cAAA,KAAGqD,KAAK,IAAIhD,GAAG,UAAU+B,MAAM,mBAA/B,QAIAtC,EAAAC,EAAAC,cAAA,MAAIK,GAAG,aAAa+B,MAAM,+BACxBtC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGqD,KAAK,cAAR,cAEFvD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGqD,KAAK,UAAR,UAEFvD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGqD,KAAK,WAAR,aAEFvD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGmD,QAxBS,SAAA3E,GACpBE,QAAQC,IAAI,gBACZK,aAAasE,WAAW,OACxBrB,EAAMC,QAAQC,KAAK,YAqBX,mDClBN/E,EAAeC,EAAQ,IAEvBkG,EAAe,CACnBR,QAAS,CACPS,MAAO,MACPC,OAAQ,MACRC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAMTC,EAASC,IAAG,wBAAyB,CACzCC,WAAY,CAAC,aACbC,SAAS,IAKXC,IAAMC,cAAc,aAsVLC,cApVb,SAAAA,EAAYrC,GAAO,IAAAjE,EAAA,OAAAsD,OAAAiD,EAAA,EAAAjD,CAAA3B,KAAA2E,IACjBtG,EAAAsD,OAAAkD,EAAA,EAAAlD,CAAA3B,KAAA2B,OAAAmD,EAAA,EAAAnD,CAAAgD,GAAAI,KAAA/E,KAAMsC,KAIRzE,MAAQ,CACNmH,SAAS,EACTzG,MAAO,GACPmC,GAAI,GACJuE,UAAW,GACXC,SAAU,GACV9B,QAAS,GACThB,SAAU,GACV+C,eAAe,EACfC,aAAa,EACbC,MAAO,GACPC,QAAS,GACTC,UAAW,IAjBMlH,EAoBnBmH,UAAY,WACVnH,EAAKC,SAAS,CAAE8G,aAAa,KArBZ/G,EAwBnBoH,qBAAuB,SAAA5G,GACrBR,EAAKC,SAAS,CAAE8E,QAASvE,EAAEL,OAAOC,SAzBjBJ,EA4BnBqH,eAAiB,WAEfrH,EAAKsH,SAASC,MAAMC,MAAQ,OAC5BxH,EAAKsH,SAASC,MAAME,UAAY,UA/BfzH,EAkCnB0H,WAAa,WACX1H,EAAKC,SAAS,CAAE8G,aAAa,KAnCZ/G,EAsCnB2H,YAAc,WAEZrI,IACGsB,KAAK,yBAA2BZ,EAAKR,MAAM6C,IAC3CxB,KAAK,SAAA+G,GACJlH,QAAQC,IAAIiH,KAEbzG,MAAM,SAAAC,GACLV,QAAQC,IAAIS,MA9CCpB,EAkDnB6H,MAAQ,WACN,IACIC,GADM,IAAIC,MACCC,WACftH,QAAQC,IAAImH,GACRA,EAAO,IAAMA,EAAO,GACtB9H,EAAKC,SAAS,CAAE4H,MAAO,eACdC,EAAO,IAAMA,EAAO,GAC7B9H,EAAKC,SAAS,CAAE4H,MAAO,iBACdC,EAAO,IAAMA,EAAO,GAC7B9H,EAAKC,SAAS,CAAE4H,MAAO,mBAEvB7H,EAAKC,SAAS,CAAE4H,MAAO,kBA7DR7H,EAiEnBiI,WAAa,SAAAC,GACXxH,QAAQC,IAAI,uBAMZ,IALA,IACIwH,EAAY,CAAED,OAAQA,EAAQhH,IADxBF,aAAaQ,QAAQ,QAG3B4G,EAAUpI,EAAKR,MAAMwH,MAEhBqB,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAClC,GAAID,EAAQC,GAAGE,MAAQL,EAAQ,CAC7BE,EAAQC,GAAGnD,iBAAkB,EAC7BkD,EAAQC,GAAGG,GAAKJ,EAAQC,GAAGG,GAAK,EAChC,MAIJxC,EAAOyC,KAAK,YAAaN,GACzBnI,EAAKC,SAAS,CAAE+G,MAAOoB,KAjFNpI,EAoFnB0I,QAAU,SAAAlI,GACRA,EAAEC,iBACFC,QAAQC,IAAIX,EAAKR,OAEjB,IAAI0B,EAAMF,aAAaQ,QAAQ,OAC/Bd,QAAQC,IAAIO,GAEZ,IAIIyH,EAAW,CACb/B,UAAW5G,EAAKR,MAAMoH,UACtB7B,QAAS/E,EAAKR,MAAMuF,QACpB7D,IAAKA,GAGP8E,EAAOyC,KAAK,UAAWE,GAEvB3C,EAAO4C,GAAG,eAAgB,SAAAxH,GACxBC,IAAEC,MAAM,CAAEC,KAAM,kBAChBb,QAAQC,IAAI,yBAA2BS,KAGzCpB,EAAK0H,cA5GY1H,EA+GnB6I,WAAa,WACX,IAAI3H,EAAMF,aAAaQ,QAAQ,OAC/Bd,QAAQC,IAAIO,GAEZ,IAAIuC,EAAS,CACXC,QAAS,CAAEC,cAAezC,IAG5B5B,IACGwJ,IAAI,gBAAiBrF,GACrB5C,KAAK,SAAA+G,GACJ5H,EAAKC,WACLS,QAAQC,IAAIiH,EAAI9G,MAChBd,EAAKC,SAAS,CAAE+G,MAAOY,EAAI9G,SAE5BK,MAAM,SAAAC,GACLV,QAAQC,IAAIS,MA/HCpB,mFAoIC,IAAA+I,EAAApH,KAClBA,KAAKkG,QACLnH,QAAQC,IAAI,SACZ,IAAIO,EAAMF,aAAaQ,QAAQ,OACrB,IAAIuG,KACdrH,QAAQC,IAAIO,GAEZ,IACkB9B,EAAasC,OAAOR,EAAK,aAEvCS,KAAK1B,SAAS,CAAE0G,SAAS,IAE3B,MAAO/E,GACPD,KAAKsC,MAAMC,QAAQC,KAAK,UACxBzD,QAAQC,IAAIiB,GACZP,IAAEC,MAAM,CAAEC,KAAM,oBAGlBI,KAAKkH,aAEL7C,EAAO4C,GAAG,UAAW,SAAAI,GACnB,IAAIC,EAAWF,EAAKvJ,MAAMwH,MAE1BtG,QAAQC,IACN,gDACEuI,KAAKC,UAAUH,IASnBC,EAASG,QAAQJ,GACjBD,EAAK9I,SAAS,CAAE+G,MAAOiC,IACvBvI,QAAQC,IAAIoI,EAAKvJ,MAAMwH,SAGzBhB,EAAO4C,GAAG,YAAa,SAAAS,GAKrB,GAJA3I,QAAQC,IAAI,kBAAoBuI,KAAKC,UAAUE,IAEhCrI,aAAaQ,QAAQ,WAEtB6H,EAAWC,OAAQ,CAC/BjI,IAAEC,MAAM,CAAEC,KAAM8H,EAAW7G,KAAO,8BAClC,IAAI4F,EAAUW,EAAKvJ,MAAMwH,MACzBtG,QAAQC,IAAI,cAAgByH,EAAQE,QACpC,IAAK,IAAID,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAE9BD,EAAQC,GAAGE,MAAQc,EAAWnB,SAChCE,EAAQC,GAAGG,GAAKa,EAAWE,WAAWf,IAIxCO,EAAK9I,SAAS,CAAE+G,MAAOoB,IAK3BoB,WAAW,WACT9I,QAAQC,IAAIoI,EAAKvJ,MAAMwH,QACtB,OAGLhB,EAAO4C,GAAG,iBAAkB,SAAAxH,GAC1BV,QAAQC,IAAI,gBAAkBuI,KAAKC,UAAU/H,IACzB,wBAAhBA,EAAI2D,SACN1D,IAAEC,MAAM,CAAEC,KAAM,oCAMpB,IAAIkC,EAAS,CACXC,QAAS,CAAEC,cAAezC,IAE5B5B,IACGwJ,IAAI,iBAAkBrF,GACtB5C,KAAK,SAAA4I,GACJ/I,QAAQC,IAAI,UAAY8I,EAAO3I,MAC3B2I,EAAO3I,MACTJ,QAAQC,IAAI,kBACZD,QAAQC,IAAI8I,EAAO3I,MAEnBiI,EAAK9I,SAAS,CACZC,MAAOuJ,EAAO3I,KAAKZ,MACnB4G,cAAe2C,EAAO3I,KAAKgG,cAC3BzE,GAAIoH,EAAO3I,KAAKyH,IAChB3B,UAAW6C,EAAO3I,KAAK8F,UACvBC,SAAU4C,EAAO3I,KAAK+F,WAGxBkC,EAAK9I,SAAS,CAAE0G,SAAS,IACzBjG,QAAQC,IAAIoI,EAAKvJ,OAEjBwB,aAAaC,QAAQ,SAAUwI,EAAO3I,KAAKyH,MAE3CQ,EAAK9I,SAAS,CAAE0G,SAAS,MAG5BxF,MAAM,SAAAC,GACL2H,EAAK9I,SAAS,CAAE0G,SAAS,IACzBjG,QAAQC,IAAI,QAAUS,sCAInB,IAAAsI,EAAA/H,KAYP,OACEG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2H,EAAD,MACA7H,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,OACTtC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aAEfL,EAAAC,EAAAC,cAAA,KACEmD,QAASxD,KAAKwF,UACd9E,GAAG,SACH+B,MAAM,oDAENtC,EAAAC,EAAAC,cAAA,KAAGoC,MAAM,uBAEXtC,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CACE8H,OAAQlI,KAAKnC,MAAMuH,YACnB+C,YAAanI,KAAK0F,eAClB0C,eAAgBpI,KAAK+F,WACrBH,MAAOhC,EACPyE,aAAa,iBAEblI,EAAAC,EAAAC,cAAA,MAAIiI,IAAK,SAAA3C,GAAQ,OAAKoC,EAAKpC,SAAWA,IAAtC,aAEAxF,EAAAC,EAAAC,cAAA,QAAMI,SAAUT,KAAK+G,SACnB5G,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,uBACTtC,EAAAC,EAAAC,cAAA,YACEK,GAAG,YACHI,SAAUd,KAAKyF,qBACfhD,MAAM,yBAERtC,EAAAC,EAAAC,cAAA,SAAOK,GAAG,YAAYK,IAAI,aAA1B,uBAKFZ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,SACEO,KAAK,SACLJ,UAAU,uCACV/B,MAAM,OACNiC,GAAG,cAMXP,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,mBAAWL,KAAKnC,MAAMoH,YAGvBjF,KAAKnC,MAAMwH,MAAMkD,IAChB,SAASC,EAAK9B,GAEZ,OADA3H,QAAQC,IAAI,QAEVmB,EAAAC,EAAAC,cAACoI,EAAD,CACEC,IAAKhC,EACLrD,aAAcmF,EAAI3B,GAClBhG,KAAM2H,EAAIvD,UACVvE,GAAI8H,EAAI5B,IACRxD,QAASoF,EAAIpF,QACbL,OAAQ/C,KAAKsG,WACbtD,KAAMwF,EAAIG,KACVpF,gBAAiBiF,EAAIjF,mBAGzBqF,KAAK5I,iBA7TGiB,aCkET4H,qNA/FbhL,MAAQ,CACNU,MAAO,GACPuK,aAAa,EACbC,SAAS,KAEXrH,cAAgB,SAAA7C,GACdR,EAAKC,SAALqD,OAAAC,EAAA,EAAAD,CAAA,GACG9C,EAAEL,OAAOkC,GAAK7B,EAAEL,OAAOC,WAI5BG,YAAc,SAAAC,GACZA,EAAEC,iBACFC,QAAQC,IAAI,UAEZrB,IACGsB,KAAK,qBAAsB,CAAEV,MAAOF,EAAKR,MAAMU,QAC/CW,KAAK,SAAA+G,GACJlH,QAAQC,IAAIiH,GACZlH,QAAQC,IAAIiH,EAAI9G,MACC,kBAAb8G,EAAI9G,MACNJ,QAAQC,IAAI,kBACZX,EAAKC,SAAS,CAAEwK,aAAa,MAE7B/J,QAAQC,IAAI,4BACZX,EAAKC,SAAS,CAAEyK,SAAS,OAG5BvJ,MAAM,SAAAC,GACLV,QAAQC,IAAIS,8EAIhB,OAAIO,KAAKnC,MAAMiL,YAEX3I,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sDAGKL,KAAKnC,MAAMkL,QAElB5I,EAAAC,EAAAC,cAAA,MAAIwF,MAAM,UAAUnD,KAAK,SAEvBvC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6CAKFF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,KAAGK,GAAG,UAAU+B,MAAM,sBACtBtC,EAAAC,EAAAC,cAAA,4CAEAF,EAAAC,EAAAC,cAAA,UACG,IADH,kCAEiCF,EAAAC,EAAAC,cAAA,WAFjC,6CAKAF,EAAAC,EAAAC,cAAA,QAAMI,SAAUT,KAAKpB,aAErBuB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACTL,EAAAC,EAAAC,cAAA,SACEM,UAAQ,EACRC,KAAK,QACLC,KAAK,QACLH,GAAG,QACHI,SAAUd,KAAK0B,gBAEfvB,EAAAC,EAAAC,cAAA,SAAOU,IAAI,SAAX,UAGPZ,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,SACEO,KAAK,SACLJ,UAAU,MACV/B,MAAM,4BACNiC,GAAG,4BApFKO,cCFtB1B,UAAM7B,EAAQ,KACdC,EAAQD,EAAQ,IAiIPsL,6MA9HbnL,MAAQ,CACN6C,GAAI,GACJuI,MAAO,GACPC,MAAO,GACPC,cAAc,EACdC,eAAe,EACfC,KAAK,KAkBP3H,cAAgB,SAAA7C,GACdR,EAAKC,SAALqD,OAAAC,EAAA,EAAAD,CAAA,GACG9C,EAAEL,OAAOkC,GAAK7B,EAAEL,OAAOC,WAI5B6K,cAAgB,WACdjL,EAAKiE,MAAMC,QAAQC,KAAK,aAG1B+G,cAAgB,SAAA1K,GACdA,EAAEC,iBAEFC,QAAQC,IAAI,WAAaX,EAAKR,MAAMoL,MAAQ,UAAY5K,EAAKR,MAAM6C,IAEvDrC,EAAKR,MAAMoL,QAAU5K,EAAKR,MAAMqL,OAG1C7K,EAAKC,SAAS,CAAE8K,eAAe,IAC/BzL,EACGsB,KADH,sBAAAuK,OAC8BnL,EAAKR,MAAM6C,IAAM,CAC3C/B,SAAUN,EAAKR,MAAMoL,QAEtB/J,KAAK,SAAAuK,GACJ1K,QAAQC,IAAIyK,EAAStK,MACC,iCAAlBsK,EAAStK,OACXd,EAAKC,SAAS,CAAE6K,cAAc,IAC9BtB,WAAW,WACTxJ,EAAKiL,iBACJ,QAGN9J,MAAM,SAAAC,GACLV,QAAQC,IAAIS,MAGhBpB,EAAKC,SAAS,CAAE8K,eAAe,wFAnDf,IAAAhC,EAAApH,KAClB,IACE,IAAM0J,EAAMnK,EAAIQ,OAAOC,KAAKsC,MAAMqH,MAAMC,OAAOlJ,GAAI,YACnD3B,QAAQC,IAAI0K,EAAIhJ,IAChB3B,QAAQC,IAAI0K,EAAIhJ,IAChBV,KAAK1B,SAAS,CAAEoC,GAAIgJ,EAAIhJ,KACxB,MAAOT,GACPD,KAAK1B,SAAS,CAAE+K,KAAK,IACrBtK,QAAQC,IAAIiB,GACZ4H,WAAW,WACTT,EAAK9E,MAAMC,QAAQC,KAAK,WACvB,uCA6CL,OAAKxC,KAAKnC,MAAMwL,IAqDZlJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BApDFF,EAAAC,EAAAC,cAAA,WACGL,KAAKnC,MAAMuL,eACVjJ,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,iBAAX,2BAGFtC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OAEbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBAAf,yBAEAL,EAAAC,EAAAC,cAAA,QAAMI,SAAUT,KAAKuJ,eACnBpJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,SACEM,UAAQ,EACRC,KAAK,WACLF,GAAG,QACHI,SAAUd,KAAK0B,gBAEjBvB,EAAAC,EAAAC,cAAA,SAAOU,IAAI,SAAX,iBAEFZ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,SACEM,UAAQ,EACRC,KAAK,WACLF,GAAG,QACHI,SAAUd,KAAK0B,gBAEjBvB,EAAAC,EAAAC,cAAA,SAAOU,IAAI,SAAX,2BAIJZ,EAAAC,EAAAC,cAAA,SACEO,KAAK,SACLJ,UAAU,kBACV/B,MAAM,qBAGmB,IAA5BuB,KAAKnC,MAAMsL,cACVhJ,EAAAC,EAAAC,cAAA,WACG,IACDF,EAAAC,EAAAC,cAAA,0CAAsC,eA7G5BY,aCLtB1B,EAAM7B,EAAQ,IAmELmM,6MA/DbhM,MAAQ,CACNiM,SAAS,EACTT,KAAI,sFAGc,IAAAjC,EAAApH,KAClBjB,QAAQC,IAAI,WAAWgB,KAAKsC,MAAMqH,MAAMC,OAAOlJ,IAE/C,IACE,IAAMgJ,EAAMnK,EAAIQ,OAAOC,KAAKsC,MAAMqH,MAAMC,OAAOlJ,GAAG,YAClD3B,QAAQC,IAAI0K,GACZ/L,IACCsB,KACC,qBAAuByK,EAAIhJ,IAE5BxB,KAAK,SAAA+G,GACJmB,EAAK9I,SAAS,CAAEwL,SAAS,IACzB/K,QAAQC,IAAIiH,KAEbzG,MAAM,SAAAC,GACL2H,EAAK9I,SAAS,CAAEwL,SAAS,IACzB/K,QAAQC,IAAIS,KAGd,MAAOQ,GAEPD,KAAK1B,SAAS,CAAE+K,KAAK,IACnBtK,QAAQC,IAAIiB,qCAWhB,OAAKD,KAAKnC,MAAMiM,QAQZ9J,KAAKnC,MAAMwL,IAKnBlJ,EAAAC,EAAAC,cAAA,iBALI,EAHJF,EAAAC,EAAAC,cAAA,mBA5C0BY,qBCFpB2C,EAAe,CACnBR,QAAU,CACRW,IAAwB,MACxBC,KAAwB,MACxBC,MAAwB,OACxBC,OAAwB,OACxBC,YAAwB,OACxBC,UAAwB,0BAK5BK,IAAMC,cAAc,aAwDLqF,cArDb,SAAAA,IAAc,IAAA1L,EAAA,OAAAsD,OAAAiD,EAAA,EAAAjD,CAAA3B,KAAA+J,IACZ1L,EAAAsD,OAAAkD,EAAA,EAAAlD,CAAA3B,KAAA2B,OAAAmD,EAAA,EAAAnD,CAAAoI,GAAAhF,KAAA/E,QAEKnC,MAAQ,CACXuH,aAAa,GAGf/G,EAAKmH,UAAYnH,EAAKmH,UAAUoD,KAAfjH,OAAAqI,EAAA,EAAArI,QAAAqI,EAAA,EAAArI,CAAAtD,KACjBA,EAAKqH,eAAiBrH,EAAKqH,eAAekD,KAApBjH,OAAAqI,EAAA,EAAArI,QAAAqI,EAAA,EAAArI,CAAAtD,KACtBA,EAAK0H,WAAa1H,EAAK0H,WAAW6C,KAAhBjH,OAAAqI,EAAA,EAAArI,QAAAqI,EAAA,EAAArI,CAAAtD,KATNA,2EAaZ2B,KAAK1B,SAAS,CAAC8G,aAAa,6CAK5BpF,KAAK2F,SAASC,MAAMC,MAAQ,4CAI5B7F,KAAK1B,SAAS,CAAC8G,aAAa,qCAGrB,IAAAgC,EAAApH,KACP,OACEG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQmD,QAASxD,KAAKwF,WAAtB,cACArF,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CACE8H,OAAQlI,KAAKnC,MAAMuH,YACnB+C,YAAanI,KAAK0F,eAClB0C,eAAgBpI,KAAK+F,WACrBH,MAAOhC,EACPyE,aAAa,iBAGblI,EAAAC,EAAAC,cAAA,MAAIiI,IAAK,SAAA3C,GAAQ,OAAIyB,EAAKzB,SAAWA,IAArC,SACAxF,EAAAC,EAAAC,cAAA,UAAQmD,QAASxD,KAAK+F,YAAtB,SACA5F,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,qCA9CM4J,IAAMhJ,WCuBTiJ,UCnCWjJ,6LDkBtB,OACEd,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO6J,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjCnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO8J,KAAK,aAAaC,UAAWE,IACpCpK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO8J,KAAK,UAAUC,UAAWnJ,IACjCf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO8J,KAAK,SAASC,UAAWC,IAChCnK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO8J,KAAK,iBAAiBC,UAAWxB,IACxC1I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO8J,KAAK,qBAAqBC,UAAWrB,IAC5C7I,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO8J,KAAK,oBAAoBC,UAAWG,IAC3CrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO8J,KAAK,oBAAoBC,UAAWG,IAE3CrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO8J,KAAK,OAAOC,UAAWN,YAbpB9I,cETEwJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,kECbNkB,IAASC,OAAO3K,EAAAC,EAAAC,cAAC0K,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlM,KAAK,SAAAmM,GACjCA,EAAaC","file":"static/js/main.e6d80071.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport \"./login.css\";\nimport M from \"materialize-css\";\n//import Navbar from \"../../components/navbar_metcss\";\n\n// import { Alert } from \"reactstrap\";\n\nconst jsonwebtoken = require(\"jsonwebtoken\");\n//const request = require(\"request\");\nconst axios = require(\"axios\");\n\nclass login extends Component {\n  state = {\n    token: \"\",\n    // email: \"\",\n    // password: \"\",\n    loggedIn: false,\n    showError: false,\n    showNullError: false,\n    creaderror: false\n  };\n\n  changehandleremail = event => {\n    this.setState({\n      email: event.target.value\n    });\n  };\n\n  changehandlerpass = event => {\n    this.setState({\n      password: event.target.value\n    });\n  };\n\n  componentDidMount() {\n    //M.toast({ html: \"I am a toast!\" });\n    var jwt = localStorage.getItem(\"jwt\");\n    console.log(\"comp mount\");\n    console.log(jwt);\n    try {\n      var tk = jsonwebtoken.verify(jwt, \"authdemo\");\n      if (tk) {\n        console.log(\"loged in\");\n        this.setState({\n          loggedIn: true,\n          email: tk.email\n        });\n      }\n    } catch (error) {\n      console.log(\"not logged in\" + error);\n\n      this.setState({\n        loggedIn: false\n      });\n    }\n  }\n\n  btn1handler = e => {\n    e.preventDefault();\n\n    // this.setState({ creaderror: true });\n    console.log(\"cliking\");\n\n    if (this.state.email === \"\" || this.state.password === \"\") {\n      console.log(this.state.email + \"   \" + this.state.password);\n      console.log(\"wtf\");\n      this.setState({\n        loggedIn: false,\n        showError: false,\n        showNullError: true\n      });\n    } else {\n      console.log(\"sending..............\");\n      console.log(this.state.email + this.state.password);\n\n      axios\n        .post(\"/api/login\", {\n          email: this.state.email,\n          password: this.state.password\n        })\n        .then(data => {\n          console.log(\"awe mewwa - - -popopopopo\");\n          console.log(data);\n          var body = data.data;\n\n          if (body) {\n            console.log(\"body - \" + body);\n            localStorage.setItem(\"jwt\", body.jwt);\n\n            this.setState({\n              loggedIn: true,\n              showError: false,\n              showNullError: false\n            });\n          } else {\n            this.setState({ creaderror: true });\n          }\n        })\n        .catch(err => {\n          M.toast({ html: \"Invalid Credentials\" });\n          console.log(\"l>> err\" + err);\n          this.setState({\n            loggedIn: false,\n            showError: true,\n            showNullError: false,\n            creaderror: true\n          });\n        });\n    }\n  };\n\n  render() {\n    const { email, password, showError, loggedIn, showNullError } = this.state;\n\n    if (!loggedIn) {\n      return (\n        <div className=\"maindiv\">\n          <div className=\"wrapper\">\n            <div className=\"form-wrapper\">\n              <h1>FCiD</h1>\n\n              <div className=\"informm\">\n                <br />\n\n                <form onSubmit={this.btn1handler}>\n                  <br />\n                  <br />\n                  <br />\n\n                  <div className=\"input-field\">\n                    <input\n                      id=\"email\"\n                      required\n                      type=\"email\"\n                      name=\"email\"\n                      onChange={this.changehandleremail}\n                    />\n                    <label for=\"email\">Email</label>\n                  </div>\n                  <div className=\"input-field\">\n                    <input\n                      required\n                      id=\"pass\"\n                      type=\"password\"\n                      name=\"pass\"\n                      onChange={this.changehandlerpass}\n                    />\n                    <label for=\"pass\">Password</label>\n                  </div>\n                  <div className=\"submit\">\n                    <input\n                      type=\"submit\"\n                      className=\"btn  waves-light light-blue darken-3\"\n                      value=\"sign in\"\n                      id=\"submit\"\n                    />\n                  </div>\n                </form>\n                {this.state.creaderror && (\n                  <div className=\"container\">\n                    <div className=\"credeer\">Invalid Creadentials</div>\n                  </div>\n                )}\n                <br />\n                <br />\n\n                <div>\n                  <Link to=\"/fogotpassword\">\n                    <a>Forgotten password</a>\n                  </Link>\n                  <br />\n                </div>\n                <div className=\"haveaccc\">\n                  still dont have a account\n                  <Link to=\"/signup\">\n                    <span> </span> <a>signup</a>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <Redirect to={`/dashboard`} />;\n    }\n  }\n}\n\nexport default login;\n","import React, { Component } from \"react\";\nimport jsonwebtoken from \"jsonwebtoken\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./register.css\";\n\nimport M from \"materialize-css\";\n\nclass Register extends Component {\n  state = {\n    email: \"\",\n    registered: false,\n    password1: \"\",\n    password2: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    errorpassmatch: false,\n    duplicateemalifound: false\n  };\n\n  changeHandler = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n\n    console.log(this.state);\n  };\n\n  componentDidMount() {\n    const jwt = localStorage.getItem(\"jwt\");\n    console.log(\"jwt token -- - -- >>>\" + jwt);\n\n    try {\n      console.log(\"in register\");\n      var pay = jsonwebtoken.verify(jwt, \"authdemo\");\n      console.log(\"payload - \" + pay);\n      console.log(\"************************************\");\n      this.props.history.push(\"/dashboard\");\n    } catch (error) {\n      console.log(\"not logged in redirecting...............\");\n\n      //e.preventDefault();\n    }\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n    console.log(this.state);\n\n    var jwt = localStorage.getItem(\"jwt\");\n\n    var config = {\n      headers: { authorization: jwt }\n    };\n\n    const passmatch = this.state.password1 === this.state.password2;\n\n    console.log(passmatch);\n\n    if (passmatch) {\n      this.setState({\n        errorpassmatch: false\n      });\n      axios\n        .post(\n          \"/api/signup\",\n          {\n            email: this.state.email,\n            password: this.state.password1,\n            firstname: this.state.firstname,\n            lastname: this.state.lastname\n          },\n          config\n        )\n        .then(response => {\n          console.log(\"resonse came - -\");\n          console.log(response.data);\n          this.setState({ registered: true });\n          localStorage.setItem(\"jwt\", response.data.jwt);\n        })\n        .catch(err => {\n          console.log(err);\n          console.log(err.response.data == 11000);\n\n          if (err.response.data == 11000) {\n\n            //M.toast({ html: \"Invalid Credentials\" });\n            //M.toast({html:\"Duplicate account found registerd to this email\"})\n            this.setState({ duplicateemalifound: true });\n          }\n\n        \n        });\n    } else {\n      this.setState({ errorpassmatch: true });\n    }\n  };\n\n  chngehandlsel = e => {\n    this.setState({ usertype: e.target.value });\n  };\n\n  render() {\n    if (this.state.registered === false) {\n      return (\n        <div>\n          <div className=\"maindiv\">\n            <div className=\"wrapper\">\n              <div className=\"form-wrapper\">\n                <h1>FCiD</h1>\n\n                <div className=\"informmm\">\n                  <form onSubmit={this.submitHandler}>\n                    {this.state.errorpassmatch && (\n                      <div class=\"alert alert-warning\" role=\"alert\">\n                        password does not match\n                      </div>\n                    )}\n                    {this.state.duplicateemalifound && (\n                      <div class=\"alert alert-warning\" role=\"alert\">\n                        Duplicate email Found\n                      </div>\n                    )}\n\n\n\n                  <div className=\"input-field\">\n                      <input\n                        required\n                        type=\"email\"\n                        \n                        id=\"email\"\n                        onChange={this.changeHandler}\n                        \n                      />\n                       <label for=\"email\">Email</label>\n                    </div>\n\n                    <div className=\"input-field\">\n                      <input\n                        required\n                        type=\"text\"\n                        \n                        id=\"firstname\"\n                        onChange={this.changeHandler}\n                        \n                      />  <label for=\"firstname\">Firstname</label>\n                    </div>\n\n                    <div className=\"input-field\">\n                      <input\n                        required\n                        type=\"text\"\n                       \n                        id=\"lastname\"\n                        onChange={this.changeHandler}\n                        \n                      /><label for=\"lastname\">Lastname</label>\n                    </div>\n\n                    <div className=\"input-field\">\n                      <input\n                        required\n                        type=\"password\"\n                        id=\"password1\"\n                        \n                        onChange={this.changeHandler}\n                      /><label for=\"password1\">Password</label>\n                    </div>\n\n                    <div className=\"input-field\">\n                      <input\n                        required\n                        type=\"password\"\n                        \n                        id=\"password2\"\n                        \n                        onChange={this.changeHandler}\n                      /><label for=\"password2\">Confirm Password</label>\n                    </div>\n\n                    <div class=\"form-group\" />\n\n                    <input\n                      type=\"submit\"\n                      class=\"btn btn-primary\"\n                      value=\"Sign Up\"\n                      id=\"submitbtn\"\n                    />\n                  </form>\n                  <div className='haveacc'>\n                    Have an account?\n                    <Link to=\"/login\">\n                      <span> </span> <a>login</a>\n                    </Link>\n                  </div>\n                  {/* <div className='bcktologin'>\n                    Back to Login\n                    <Link to=\"/login\">\n                      <span> </span> <a>login</a>\n                    </Link>\n                  </div> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <Redirect to={\"/dashboard\"} />;\n    }\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./candidatecard.css\";\nimport M from \"materialize-css\";\nimport Axios from \"axios\";\n\nconst moment = require(\"moment\");\n\nclass CandidateCard extends Component {\n  state = {\n    id: null,\n    thumbsicon: false,\n    fromNow: null\n  };\n\n  upvote = () => {\n    console.log(\"up\");\n    console.log(\"id - \" + this.props.id);\n    console.log(this.state);\n\n    if (this.state.thumbsicon === false) {\n      this.setState({\n        thumbsicon: true\n      });\n\n      this.props.upvote(this.props.id);\n    } else {\n      // this.setState({\n      //   thumbsicon: false\n      // });\n    }\n\n    // if (this.state.upvotesnow >= this.state.upvotesbegin + 1) {\n    //   M.toast({ html: \"cannot upvote twice\" });\n    // } else {\n    //   this.setState({ upvotesnow: this.state.upvotesbegin + 1 });\n\n    //   setTimeout(() => {\n    //     var jwt = localStorage.getItem(\"jwt\");\n\n    //     var config = {\n    //       headers: { authorization: jwt }\n    //     };\n    //     Axios.post(\"/api/upvote\", { postid: this.props.id }, config)\n    //       .then(result => {\n    //         console.log(result);\n    //         M.toast({ html: \"upvotes\" });\n    //       })\n    //       .catch(err => {\n    //         console.log(err);\n    //       });\n    //   }, 2000);\n    // }\n  };\n\n  // componentDidMount() {\n  //   //this.setState({ upvotecount: this.props.upvotescount });\n  //   console.log(\n  //     \"time i got in can card - \" +\n  //       this.props.time.slice(4, 24) +\n  //       \"pro - \" +\n  //       JSON.stringify(this.props)\n  //   );\n  //   // const dote = new Date(this.props.time)\n  //   // console.log(dote.toTimeString)\n  //   //Tue Apr 23 2019 12:21:53 GMT+0530 (+0530)\n  //   var s = this.props.time.slice(4, 24); //\"2019-04-24 18:00:00\";  // from action.timeStamp\n\n  //   //var actionTime = moment(s , \"YYYY-MM-DD HH:mm:ssZ\");\n  //   var actionTime = moment(s, \"MMM-DD-YYYY HH:mm:ssZ\");\n  //   var timeAgo = actionTime.fromNow();\n\n  //   console.log(timeAgo);\n\n  //   this.setState({ fromNow: timeAgo });\n\n  //   console.log(\"upvoide count - \" + this.props.upvotescount);\n  //   console.log(this.props);\n\n  //   // this.setState({\n  //   //   thumbsicon: this.props.thisUserUpVoted\n  //   // })\n  // }\n\n  render() {\n    if (this.props.time) {\n      var s = this.props.time.slice(4, 24); //\"2019-04-24 18:00:00\";  // from action.timeStamp\n\n      //var actionTime = moment(s , \"YYYY-MM-DD HH:mm:ssZ\");\n      var actionTime = moment(s, \"MMM-DD-YYYY HH:mm:ssZ\");\n      var timeAgo = actionTime.fromNow();\n    }\n\n    return (\n      <div className=\"postcard\">\n        <div>\n          <div className=\"card horizontal\">\n            <div className=\"card-stacked\">\n              <h4 className=\"cardheader\">\n                {this.props.name} <span className=\"fromnow\">{timeAgo}</span>{\" \"}\n              </h4>\n              <div className=\"card-content\">\n                <p className=\"cardcontent\">{this.props.content}</p>\n              </div>\n\n              <div />\n              <div>\n                <div className=\"votes\">\n                  <span className=\"upvotecount\">{this.props.upvotescount}</span>\n\n                  <a hidden={this.props.thisUserUpVoted}>\n                    <i\n                      onClick={this.upvote}\n                      id=\"up\"\n                      className=\"far fa-thumbs-up fa-2x\"\n                    />\n                  </a>\n                  <a hidden={!this.props.thisUserUpVoted}>\n                    <i\n                      class=\"fas fa-thumbs-up fa-2x\"\n                      onClick={this.upvote}\n                      id=\"up\"\n                    />\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CandidateCard);\n","import React, { Component } from \"react\";\nimport \"./candidatecard.css\";\n\nclass UserCard extends Component {\n  // cnadidateview = () => {\n  //   console.log(this.props);\n  //   this.props.history.push(\"/getcandidate/\" + this.props._id);\n  // };\n\n  render() {\n    return (\n      <div>\n        <div id=\"cancard\" class=\"card center bg-light mb-3 w-75\">\n          <h1 className=\"badge\">\n            <span class=\"badge badge-pill badge-danger\">\n              {this.props.pendingcan}\n            </span>\n          </h1>\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">{this.props.name}</h4>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserCard;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nrequire(\"./nav.css\");\n\nconst Navbar = props => {\n  const logoutHandler = e => {\n    console.log(\"loggeeeeeeee\");\n    localStorage.removeItem(\"jwt\");\n    props.history.push(\"/login\");\n  };\n\n  return (\n    <nav>\n      <div id=\"nav\" className=\"nav-wrapper grey darken-3\">\n        <a href=\"/\" id=\"navlogo\" class=\"brand-logo left\">\n          FCiD\n        </a>\n\n        <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down \">\n          <li>\n            <a href=\"/dashboard\">Dashboard</a>\n          </li>\n          <li>\n            <a href=\"/login\">Login</a>\n          </li>\n          <li>\n            <a href=\"/signup\">register</a>\n          </li>\n          <li>\n            <a onClick={logoutHandler}>logout</a>\n            {/* <button className=\"  waves-effect waves-light btn-small left  red accent-4 \" onClick={logoutHandler}>\n          Logout\n        </button> */}\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default withRouter(Navbar);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport CandidateCard from \"../../components/CandidateCard\";\nimport UserCard from \"../../components/usercard\";\nimport \"./dashboard.css\";\nimport Navbar from \"../../components/navbar_metcss\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\nimport M from \"materialize-css\";\nimport io from \"socket.io-client\";\n//import { upvote } from \"../../../../api/routes/user.routes\";\nconst jsonwebtoken = require(\"jsonwebtoken\");\n\nconst customStyles = {\n  content: {\n    width: \"50%\",\n    height: \"50%\",\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n\n//import { CandidateCard } from \"./CandidateCard\";\n// const request = require(\"request\");\nconst socket = io(\"http://127.0.0.1:3001\", {\n  transports: [\"websocket\"],\n  upgrade: false\n});\n\n//\"up\":0,\"down\":0,\"upvoted\":[],\"downvoted\":[],\"_id\":\"5cdc55822f24c95dec2e45d4\",\"firstName\":\"Dewindi\",\"content\":\"aaa\",\"date\":\"Wed May 15 2019 23:38:02 GMT+0530 (+0530)\",\"__v\":0}\n\nModal.setAppElement(\"#root\");\nclass dashboard extends Component {\n  constructor(props) {\n    super(props);\n    //this.upvoteprop = this.upvoteprop.bind(this);\n  }\n\n  state = {\n    logedin: true,\n    email: \"\",\n    id: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    content: \"\",\n    usertype: \"\",\n    emailverified: false,\n    modalIsOpen: false,\n    posts: [],\n    upvoted: [],\n    downvoted: []\n  };\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true });\n  };\n\n  changeHandlercontent = e => {\n    this.setState({ content: e.target.value });\n  };\n\n  afterOpenModal = () => {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = \"#f00\";\n    this.subtitle.style.textAlign = \"center\";\n  };\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  verifyemail = () => {\n    //this.props.history.push('/fogotpassword')\n    axios\n      .post(\"/usr/sendconfirmemail/\" + this.state.id)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  greet = () => {\n    var now = new Date();\n    var hour = now.getHours();\n    console.log(hour);\n    if (hour > 18 && hour < 23) {\n      this.setState({ greet: \"Good night\" });\n    } else if (hour > 16 && hour < 18) {\n      this.setState({ greet: \"Good evening\" });\n    } else if (hour > 12 && hour < 16) {\n      this.setState({ greet: \"Good afternoon\" });\n    } else {\n      this.setState({ greet: \"Good morning\" });\n    }\n  };\n\n  upvoteprop = postid => {\n    console.log(\"only i upvoted post\");\n    var jwt = localStorage.getItem(\"jwt\");\n    var upvotedta = { postid: postid, jwt: jwt };\n\n    var postarr = this.state.posts;\n\n    for (var i = 0; i < postarr.length; i++) {\n      if (postarr[i]._id === postid) {\n        postarr[i].thisUserUpVoted = true;\n        postarr[i].up = postarr[i].up + 1;\n        break;\n      }\n    }\n\n    socket.emit(\"newupvote\", upvotedta);\n    this.setState({ posts: postarr });\n  };\n\n  addpost = e => {\n    e.preventDefault();\n    console.log(this.state);\n\n    var jwt = localStorage.getItem(\"jwt\");\n    console.log(jwt);\n\n    var config = {\n      headers: { authorization: jwt }\n    };\n\n    var senddata = {\n      firstName: this.state.firstName,\n      content: this.state.content,\n      jwt: jwt\n    };\n\n    socket.emit(\"newpost\", senddata); //newposterror\n\n    socket.on(\"newposterror\", err => {\n      M.toast({ html: \"Error Ocurred\" });\n      console.log(\"error post emit fired \" + err);\n    });\n\n    this.closeModal();\n  };\n\n  fetchPosts = () => {\n    var jwt = localStorage.getItem(\"jwt\");\n    console.log(jwt);\n\n    var config = {\n      headers: { authorization: jwt }\n    };\n\n    axios\n      .get(\"/api/getposts\", config)\n      .then(res => {\n        this.setState();\n        console.log(res.data);\n        this.setState({ posts: res.data });\n      })\n      .catch(err => {\n        console.log(err);\n        // M.toast({ html: \"Error Ocurred\" });\n      });\n  };\n\n  componentDidMount() {\n    this.greet();\n    console.log(\"mount\");\n    var jwt = localStorage.getItem(\"jwt\");\n    var now = new Date();\n    console.log(jwt);\n\n    try {\n      var dashboard = jsonwebtoken.verify(jwt, \"authdemo\");\n      if (dashboard) {\n        this.setState({ logedin: true });\n      }\n    } catch (error) {\n      this.props.history.push(\"/login\");\n      console.log(error);\n      M.toast({ html: \"Session Expired\" });\n    }\n\n    this.fetchPosts();\n\n    socket.on(\"newpost\", newpost => {\n      var preposts = this.state.posts;\n\n      console.log(\n        \"added new post somewhere - 0=================\" +\n          JSON.stringify(newpost)\n      );\n\n      // this.setState(prevState => {\n      //   const postszzz = [newpost, ...prevState.posts];\n      //   console.log(\"set state = \" + postszzz);\n      //   return {postszzz}\n      // });\n\n      preposts.unshift(newpost);\n      this.setState({ posts: preposts });\n      console.log(this.state.posts);\n    });\n\n    socket.on(\"newupvote\", upvotedata => {\n      console.log(\"someone upvoted\" + JSON.stringify(upvotedata));\n\n      const userId = localStorage.getItem(\"userId\");\n\n      if (userId != upvotedata.userId) {\n        M.toast({ html: upvotedata.name + \" upvoted a post just now \" });\n        var postarr = this.state.posts;\n        console.log(\"post arr - \" + postarr.length);\n        for (var i = 0; i < postarr.length; i++) {\n          //console.log(\"postszz - \" + JSON.stringify(postarr[i]));\n          if (postarr[i]._id === upvotedata.postid) {\n            postarr[i].up = upvotedata.updatepost.up;\n            //postarr.splice(i, 1)\n            // console.log(\"aha  - \"+JSON.stringify(postarr));\n          }\n          this.setState({ posts: postarr });\n        }\n      } else {\n      }\n      //postarr.push(upvotedata.updatepost)\n      setTimeout(() => {\n        console.log(this.state.posts);\n      }, 1000);\n    }); //newupvoteerror\n\n    socket.on(\"newupvoteerror\", err => {\n      console.log(\"error upvoted\" + JSON.stringify(err));\n      if (err.content === \"cannot_upvote_twice\") {\n        M.toast({ html: \"Cannot upvote an upvoted post\" });\n      }\n    });\n\n    //socket.emit(\"newpost\", \"sasasasasasas/////////////*qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\");\n\n    var config = {\n      headers: { authorization: jwt }\n    };\n    axios\n      .get(\"/api/dashboard\", config)\n      .then(result => {\n        console.log(\"sucsess\" + result.data);\n        if (result.data) {\n          console.log(\"menna apu data\");\n          console.log(result.data);\n\n          this.setState({\n            email: result.data.email,\n            emailverified: result.data.emailverified,\n            id: result.data._id,\n            firstName: result.data.firstName,\n            lastName: result.data.lastName\n          });\n\n          this.setState({ logedin: true });\n          console.log(this.state);\n\n          localStorage.setItem(\"userId\", result.data._id);\n        } else {\n          this.setState({ logedin: false });\n        }\n      })\n      .catch(err => {\n        this.setState({ logedin: false });\n        console.log(\"error\" + err);\n      });\n  }\n\n  render() {\n    //var postsss = this.state.posts;\n\n    //     socket.on(\"newpost\", newpost => {\n    //       var preposts = this.state.posts;\n\n    // console.log(\"added new post somewhere - 0=================\")\n\n    //       preposts.push({ name: newpost.firstName, content: newpost.content });\n    //       this.setState({ posts: preposts });\n    //     });\n\n    return (\n      <div>\n        <Navbar />\n        <div class=\"row\">\n          <div className=\"maindash\" />\n\n          <a\n            onClick={this.openModal}\n            id=\"addbtn\"\n            class=\"btn-floating btn-large light-blue darken-3 pulse\"\n          >\n            <i class=\"fas fa-plus fa-3x\" />\n          </a>\n          <Modal\n            isOpen={this.state.modalIsOpen}\n            onAfterOpen={this.afterOpenModal}\n            onRequestClose={this.closeModal}\n            style={customStyles}\n            contentLabel=\"Example Modal\"\n          >\n            <h2 ref={subtitle => (this.subtitle = subtitle)}>Add Story</h2>\n\n            <form onSubmit={this.addpost}>\n              <div class=\"input-field col s12\">\n                <textarea\n                  id=\"textarea1\"\n                  onChange={this.changeHandlercontent}\n                  class=\"materialize-textarea\"\n                />\n                <label id=\"postlable\" for=\"textarea1\">\n                  What's Happening ?\n                </label>\n              </div>\n\n              <div className=\"submit\">\n                <input\n                  type=\"submit\"\n                  className=\"btn  waves-light light-blue darken-3\"\n                  value=\"Post\"\n                  id=\"submit\"\n                />\n              </div>\n            </form>\n          </Modal>\n\n          <div className=\"container\">\n            <div className=\"greet\">\n              <h1>hello {this.state.firstName}</h1>\n            </div>\n\n            {this.state.posts.map(\n              function(ele, i) {\n                console.log(\"test\");\n                return (\n                  <CandidateCard\n                    key={i}\n                    upvotescount={ele.up}\n                    name={ele.firstName}\n                    id={ele._id}\n                    content={ele.content}\n                    upvote={this.upvoteprop}\n                    time={ele.date}\n                    thisUserUpVoted={ele.thisUserUpVoted}\n                  />\n                );\n              }.bind(this)\n            )}\n\n            {/* {postsss &&\n              postsss.map((ele, iis) => {\n                return (\n                  <CandidateCard\n                    upvotescount={ele.up}\n                    name={ele.firstName}\n                    id={ele._id}\n                    content={ele.content}\n                    upvote={this.upvoteprop}\n                    time = {ele.date}\n                    thisUserUpVoted = {ele.thisUserUpVoted}\n                  />\n                );\n              })} */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default dashboard;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./forgotpassword.css\";\n\n// import { Alert } from 'reactstrap';\n\nclass fogotpassword extends Component {\n  state = {\n    email: \"\",\n    errnotfound: false,\n    succsee: false\n  };\n  changeHandler = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  btn1handler = e => {\n    e.preventDefault();\n    console.log(\"inform\");\n\n    axios\n      .post(\"/api/fogotpassword\", { email: this.state.email })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n        if (res.data === \"no_user_found\") {\n          console.log(\"no user found \");\n          this.setState({ errnotfound: true });\n        } else {\n          console.log(\"email send successfullly\");\n          this.setState({ succsee: true });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    if (this.state.errnotfound) {\n      return (\n        <div>\n         \n          <br />\n          <h1> please check your email and try again </h1>\n        </div>\n      );\n    } else if (this.state.succsee) {\n      return (\n        <h1 color=\"primary\" role=\"alert\">\n          \n          <br />\n          <h1> reset link set to your email </h1>\n        </h1>\n      );\n    } else {\n      return (\n        <div className=\"maindiv\">\n          <div className=\"wrapper\">\n            <div className=\"informforgot\">\n              <div className=\"forgotfrm\">\n                <i id=\"padlock\" class=\"fas fa-lock fa-5x\" />\n                <h3>we all forget and that's cool </h3>\n\n                <h5>\n                  {\" \"}\n                  Enter your email and we'll send<br />\n                  you a link to get back into your account.\n                </h5>\n                <form onSubmit={this.btn1handler}>\n\n                <br></br>\n\n                <div className=\"input-field\">\n                      <input\n                        required\n                        type=\"email\"\n                        name=\"email\"\n                        id=\"email\"\n                        onChange={this.changeHandler}\n                        \n                      /><label for=\"email\">email</label>\n                    </div>\n\n                 <br></br>\n                  <input\n                    type=\"submit\"\n                    className=\"btn\"\n                    value=\"Send password reset email\"\n                    id=\"submitbtnnn\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default fogotpassword;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./restpassword.css\";\n\nconst jwt = require(\"jsonwebtoken\");\nconst axios = require(\"axios\");\n\nclass resetpassword extends Component {\n  state = {\n    id: \"\",\n    pass1: \"\",\n    pass2: \"\",\n    passchangeok: false,\n    massmissmatch: false,\n    exp: false\n  };\n\n  componentDidMount() {\n    try {\n      const iid = jwt.verify(this.props.match.params.id, \"authdemo\");\n      console.log(iid.id);\n      console.log(iid.id);\n      this.setState({ id: iid.id });\n    } catch (error) {\n      this.setState({ exp: true });\n      console.log(error);\n      setTimeout(() => {\n        this.props.history.push(\"/login\");\n      }, 2000);\n    }\n  }\n\n  changeHandler = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  redirectlogin = () => {\n    this.props.history.push(\"/login\");\n  };\n\n  submithandler = e => {\n    e.preventDefault();\n\n    console.log(\"passs - \" + this.state.pass1 + \"idd -- \" + this.state.id);\n\n    var match = this.state.pass1 === this.state.pass2;\n\n    if (match) {\n      this.setState({ massmissmatch: false });\n      axios\n        .post(`/api/resetpassword/${this.state.id}`, {\n          password: this.state.pass1\n        })\n        .then(Response => {\n          console.log(Response.data);\n          if (Response.data === \"password changed succesfully\") {\n            this.setState({ passchangeok: true });\n            setTimeout(() => {\n              this.redirectlogin();\n            }, 5000);\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    } else {\n      this.setState({ massmissmatch: true });\n    }\n  };\n\n  render() {\n    if (!this.state.exp) {\n      return (\n        <div>\n          {this.state.massmissmatch && (\n            <div class=\"passmissmatch\">password does not match</div>\n          )}\n\n          <div className=\"container\">\n            <div className=\"row\">\n              \n              <div className=\"respassheader\"> reset your password </div>\n\n              <form onSubmit={this.submithandler}>\n                <div className=\"formresetpass\">\n                  <div className=\"input-field\">\n                    <input\n                      required\n                      type=\"password\"\n                      id=\"pass1\"\n                      onChange={this.changeHandler}\n                    />\n                    <label for=\"pass1\">new password</label>\n                  </div>\n                  <div className=\"input-field\">\n                    <input\n                      required\n                      type=\"password\"\n                      id=\"pass2\"\n                      onChange={this.changeHandler}\n                    />\n                    <label for=\"pass2\">re enter new password</label>\n                  </div>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  value=\"reset password\"\n                />\n              </form>\n              {this.state.passchangeok === true && (\n                <div>\n                  {\" \"}\n                  <h1>password changed succesfully</h1>{\" \"}\n                </div>\n              )}\n            </div>\n          \n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h1> Link expired </h1>\n        </div>\n      );\n    }\n  }\n}\n\nexport default resetpassword;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nconst jwt = require('jsonwebtoken')\n\n\nclass emailverify extends Component {\n  state = {\n    sucsess: false,\n    exp:false\n  };\n\n  componentDidMount() {\n    console.log('token - '+this.props.match.params.id);\n\n    try {\n      const iid = jwt.verify(this.props.match.params.id,'authdemo')\n      console.log(iid)\n      axios\n      .post(\n        \"/usr/confirmemail/\" + iid.id\n      )\n      .then(res => {\n        this.setState({ sucsess: true });\n        console.log(res);\n      })\n      .catch(err => {\n        this.setState({ sucsess: false });\n        console.log(err);\n      });\n\n    } catch (error) {\n\n      this.setState({ exp: true });\n        console.log(error);\n      \n    }\n\n\n   \n\n    \n  }\n\n  render() {\n    if (!this.state.sucsess) {\n      return (\n//         <Alert color=\"dark\" role=\"alert\">\n//   please wait \n// </Alert>\n<div></div>\n      );\n    }\n    if (this.state.exp) {\n      return (\n//         <Alert color=\"dark\" role=\"alert\">\n//   token expired , please try again\n// </Alert>\n<div></div>\n      );\n    }\n    \n    else {\n    //   return (<Alert color=\"success\" role=\"alert\">\n    //   email confirmed\n    // </Alert>)\n    }\n  }\n}\n\nexport default emailverify;\n","import React from 'react';\nimport Modal from 'react-modal';\n \nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n \n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root')\n \nclass Mod extends React.Component {\n  constructor() {\n    super();\n \n    this.state = {\n      modalIsOpen: false\n    };\n \n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n \n  openModal() {\n    this.setState({modalIsOpen: true});\n  }\n \n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n \n  closeModal() {\n    this.setState({modalIsOpen: false});\n  }\n \n  render() {\n    return (\n      <div>\n        <button onClick={this.openModal}>Open Modal</button>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n \n          <h2 ref={subtitle => this.subtitle = subtitle}>Hello</h2>\n          <button onClick={this.closeModal}>close</button>\n          <div>I am a modal</div>\n          <form>\n            <input />\n            <button>tab navigation</button>\n            <button>stays</button>\n            <button>inside</button>\n            <button>the modal</button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n}\n \nexport default Mod;","import React, { Component } from \"react\";\n// import \"./App.css\";\n// const jsonwebtoken = require(\"jsonwebtoken\");\n// const request = require(\"request\");\n\n// import 'materialize-css/dist/css/materialize.min.css'\n\n// import M from 'materialize-css/dist/js/materialize.min.js'\n\nimport Login from \"./pages/login/login\";\nimport Register from \"./pages/register/register\";\nimport Dashboard from \"./pages/dashboard/dashboard\";\nimport fogotpassword from \"./pages/fogotpassword/fogotpassword\";\nimport resetpassword from \"./pages/resetpassword/resetpassword\";\nimport emailconfirm from \"./pages/emailverify/emailverify\";\nimport Mod from \"./pages/modal\";\n\nimport Userprofile from \"./pages/userprofile/user\";\n\nimport { BrowserRouter, Route, HashRouter } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/dashboard\" component={Dashboard} />\n        <Route path=\"/signup\" component={Register} />\n        <Route path=\"/Login\" component={Login} />\n        <Route path=\"/fogotpassword\" component={fogotpassword} />\n        <Route path=\"/resetpassword/:id\" component={resetpassword} />\n        <Route path=\"/confirmemail/:id\" component={emailconfirm} />\n        <Route path=\"/confirmemail/:id\" component={emailconfirm} />\n\n        <Route path=\"/mod\" component={Mod} />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport jsonwebtoken from \"jsonwebtoken\";\nimport \"./user.css\";\n\nclass Userprofile extends Component {\n  state = {\n    firstName: \"\",\n    email: \"\",\n    lastName: \"\",\n    login: false,\n    success: false,\n    addedsucsess: 0,\n    expat: new Date(),\n    nullfielderr: false,\n    userdata: {}\n  };\n  chngehandlfname = e => {\n    this.state.userdata.firstName = e.target.value;\n    this.forceUpdate();\n    console.log(this.state.userdata);\n  };\n\n  chngehandllname = e => {\n    this.state.userdata.lastName = e.target.value;\n    this.forceUpdate();\n    console.log(this.state.userdata);\n  };\n\n  chngehandlemail = e => {\n    this.state.userdata.email = e.target.value;\n    this.forceUpdate();\n    console.log(this.state.userdata);\n  };\n\n  componentDidMount() {\n    const jwt = localStorage.getItem(\"jwt\");\n    console.log('jwt token -- - -- >>>'+jwt);\n\n    try {\n      console.log(\"in register\");\n      var pay = jsonwebtoken.verify(jwt, \"authdemo\");\n      console.log('payload - '+pay);\n      console.log('************************************' )\n\n      \n    } catch (error) {\n      console.log(\"not logged in redirecting...............\");\n\n      //e.preventDefault();\n      this.props.history.push(\"/Login\");\n    }\n\n    console.log(this.props.match.params.id);\n\n    axios\n      .get(\"/usr/user/\" + this.props.match.params.id)\n      .then(res => {\n        this.setState({ userdata: res.data });\n        console.log(res);\n        console.log(\"---------\");\n        console.log(this.state.userdata);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  btn1handler = e => {\n    e.preventDefault();\n\n    var jwt = localStorage.getItem(\"jwt\");\n\n    var config = {\n      headers: { authorization: jwt }\n    };\n\n    var dto = {\n      email: this.state.userdata.email,\n      firstName: this.state.userdata.firstName,\n      lastName: this.state.userdata.lastName\n    };\n\n    console.log(\"data edit\" + dto.email);\n    console.log(\"data edit\" + dto.firstName);\n    console.log(\"data edit\" + dto.lastName);\n\n    axios\n      .post(\"/usr/edituser/\" + this.state.userdata.id, dto, config)\n      .then(response => {\n        console.log(\"resonse came - -\");\n        console.log(response.data);\n        this.setState({ sucsess: true });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ sucsess: false });\n      });\n  };\n\n  chngpss = e => {\n    this.props.history.push(\"/changepass/\" + this.props.match.params.id);\n  };\n\n  render() {\n    return (\n      <div>\n        \n        <div className=\"maindivuser\">\n          <div className=\"row\">\n            <div className=\"col-sm\" />\n            <div className=\"col-sm\">\n              {this.state.success && (\n                <div class=\"alert alert-success\" role=\"alert\">\n                  updated successfully\n                </div>\n              )}\n\n              <img src='' />\n\n              <form onSubmit={this.btn1handler}>\n                <br />\n                <br />\n                <br />\n                <div className=\"form-group\">\n                <lable>First Name</lable>\n                  <input\n                    required\n                    type=\"text\"\n                    name=\"firstName\"\n                    className=\"form-control\"\n                    onChange={this.chngehandlfname}\n                    placeholder=\"enter first name\"\n                    id=\"firstName\"\n                    value={this.state.userdata.firstName}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                <label>Last Name</label>\n                  <input\n                    required\n                    type=\"text\"\n                    name=\"lastName\"\n                    className=\"form-control\"\n                    onChange={this.chngehandllname}\n                    placeholder=\"enter last name\"\n                    id=\"lastName\"\n                    value={this.state.userdata.lastName}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                <label>Email</label>\n                  <input\n                    required\n                    type=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"enter candidate email\"\n                    onChange={this.chngehandlemail}\n                    id=\"email\"\n                    value={this.state.userdata.email}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  value=\"save edited details\"\n                />\n              </form>\n                <br/>\n              <button className=\"btn btn-primary\" onClick={this.chngpss}>\n                change password\n              </button>\n\n              <br />\n            </div>\n            <div className=\"col-sm\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Userprofile;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css'\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n "],"sourceRoot":""}